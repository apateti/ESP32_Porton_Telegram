#pragma once
#ifndef utils_eeprom_h
    #define utils_eeprom_h

#ifndef Arduino_h
  #include <Arduino.h>
#endif

#define EEPROM_SIZE 2048
#define SSID_SIZE   32
#define PASS_SIZE   64
#define SIZE_IP     4
#define SIZE_GATEWAY 4
#define SIZE_SUBNET 4
#define TOKEN_SIZE  46
#ifndef USER_ALL
//Hay que copiar en el Archivo TelegramESP32.h
  #define USER_ALL    20
  #define USER_SIZE   4 
  #define USER_ALL_SIZE (USER_ALL * USER_SIZE)

  #define USER_Name_SIZE 32
  #define USER_Name_ALL_SIZE (USER_Name_SIZE * USER_ALL)
#endif
#define SSID_ADDR   0
#define PASS_ADDR   SSID_SIZE
#define IP_ADDR     SSID_SIZE + PASS_SIZE
#define IP_GATEWAY  SSID_SIZE + PASS_SIZE + SIZE_IP
#define IP_SUBNET   SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY
#define TOKEN_ADDR  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET
#define USER_0      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE
#define USER_1      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + USER_SIZE
#define USER_2      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (2 * USER_SIZE)
#define USER_3      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (3 * USER_SIZE)
#define USER_4      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (4 * USER_SIZE)
#define USER_5      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (5 * USER_SIZE)
#define USER_6      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (6 * USER_SIZE)
#define USER_7      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (7 * USER_SIZE)
#define USER_8      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (8 * USER_SIZE)
#define USER_9      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (9 * USER_SIZE)
#define USER_10      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (10 * USER_SIZE)
#define USER_11      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (11 * USER_SIZE)
#define USER_12      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (12 * USER_SIZE)
#define USER_13      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (13 * USER_SIZE)
#define USER_14      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (14 * USER_SIZE)
#define USER_15      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (15 * USER_SIZE)
#define USER_16      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (16 * USER_SIZE)
#define USER_17      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (17 * USER_SIZE)
#define USER_18      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (18 * USER_SIZE)
#define USER_19      SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE)
#define USER_Name_0  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (0 * USER_Name_SIZE)
#define USER_Name_1  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (1 * USER_Name_SIZE)
#define USER_Name_2  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (2 * USER_Name_SIZE)
#define USER_Name_3  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (3 * USER_Name_SIZE)
#define USER_Name_4  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (4 * USER_Name_SIZE)
#define USER_Name_5  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (5 * USER_Name_SIZE)
#define USER_Name_6  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (6 * USER_Name_SIZE)
#define USER_Name_7  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (7 * USER_Name_SIZE)
#define USER_Name_8  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (8 * USER_Name_SIZE)
#define USER_Name_9  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (9 * USER_Name_SIZE)
#define USER_Name_10  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (10 * USER_Name_SIZE)
#define USER_Name_11  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (11 * USER_Name_SIZE)
#define USER_Name_12  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (12 * USER_Name_SIZE)
#define USER_Name_13  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (13 * USER_Name_SIZE)
#define USER_Name_14  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (14 * USER_Name_SIZE)
#define USER_Name_15  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (15 * USER_Name_SIZE)
#define USER_Name_16  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (16 * USER_Name_SIZE)
#define USER_Name_17  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (17 * USER_Name_SIZE)
#define USER_Name_18  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (18 * USER_Name_SIZE)
#define USER_Name_19  SSID_SIZE + PASS_SIZE + SIZE_IP + SIZE_GATEWAY + SIZE_SUBNET + TOKEN_SIZE + (19 * USER_SIZE) + (19 * USER_Name_SIZE)


bool EEPROMinit();
void erraseALL(void);
String readSSID();
String readPASS();
void writeSSID(String ssidSTA);
void writePASS(String passSTA);
String readTOKEN();
void writeTOKEN(String tokenBot);
void readAllUser();
void writeUser_i(int index);
void readUser_i(int index);
void writeUserName_i(int index, String userName);
void readAllUserName(void);
void readAllUserRegPen(void);




#endif